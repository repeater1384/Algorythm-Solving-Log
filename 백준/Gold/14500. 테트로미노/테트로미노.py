from sys import stdin
n,m = map(int,input().split())
matrix = [[*map(int,stdin.readline().split())] for _ in range(n)]
blocks = [
    [(0,0), (0,1), (1,0), (1,1)],
    [(0,0), (0,1), (0,2), (0,3)],
    [(0,0), (1,0), (2,0), (3,0)],
    [(0,0), (0,1), (0,2), (1,0)],
    [(1,0), (1,1), (1,2), (0,2)],
    [(0,0), (1,0), (1,1), (1,2)],
    [(0,0), (0,1), (0,2), (1,2)],
    [(0,0), (1,0), (2,0), (2,1)],
    [(2,0), (2,1), (1,1), (0,1)],
    [(0,0), (0,1), (1,0), (2,0)],
    [(0,0), (0,1), (1,1), (2,1)],
    [(0,0), (0,1), (0,2), (1,1)],
    [(1,0), (1,1), (1,2), (0,1)],
    [(0,0), (1,0), (2,0), (1,1)],
    [(1,0), (0,1), (1,1), (2,1)],
    [(1,0), (2,0), (0,1), (1,1)],
    [(0,0), (1,0), (1,1), (2,1)],
    [(1,0), (0,1), (1,1), (0,2)],
    [(0,0), (0,1), (1,1), (1,2)]
]

answer = 0
for i in range(n):
    for j in range(m):
        for idx in range(19): #19개 블럭
            cur_answer = 0
            for b in range(4):  #블럭을 이루는 4개의 좌표
                ni = i+blocks[idx][b][0]
                nj = j+blocks[idx][b][1]
                try:cur_answer += matrix[ni][nj]
                except IndexError:break
            answer = max(answer,cur_answer)

print(answer)